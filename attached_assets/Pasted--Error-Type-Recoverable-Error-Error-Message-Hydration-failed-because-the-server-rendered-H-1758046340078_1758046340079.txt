## Error Type
Recoverable Error

## Error Message
Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <Home>
                <MainLayout>
                  <div className="min-h-scre...">
                    <Header onSidebarToggle={function toggleSidebar} isSidebarOpen={false} sidebarCollapsed={true}>
                      <header className="header-con...">
                        <div className="header-con...">
                          <_c>
                          <div>
                          <div>
                          <div className="flex items...">
                            <_c>
                            ...
                              <Primitive.button.Slot type="button" id="radix-_R_1..." aria-haspopup="menu" ...>
                                <Primitive.button.SlotClone type="button" id="radix-_R_1..." aria-haspopup="menu" ...>
                                  <_c variant="ghost" size="icon" className="transition..." disabled={true} type="button" ...>
                                    <button
                                      className="inline-flex items-center justify-center whitespace-nowrap rounded-md ..."
                                      ref={function}
+                                     disabled={true}
-                                     disabled={null}
                                      type="button"
                                      id="radix-_R_18matqlb_"
                                      aria-haspopup="menu"
                                      aria-expanded={false}
                                      aria-controls={undefined}
                                      data-state="closed"
                                      data-disabled={undefined}
                                      onPointerDown={function handleEvent}
                                      onKeyDown={function handleEvent}
                                    >
                            <_c variant="ghost" size="icon" ...>
                              <button className="inline-fle..." ref={null} ...>
                                <div className="relative w...">
                                  <Sun className="h-5 w-5">
                                    <_c ref={null} iconNode={[...]} className="lucide-sun...">
                                      <svg
                                        ref={null}
                                        xmlns="http://www.w3.org/2000/svg"
                                        width={24}
                                        height={24}
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        strokeWidth={2}
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
+                                       className="lucide lucide-sun h-5 w-5"
-                                       className="lucide lucide-sun absolute h-5 w-5 transition-[transform,opacity] d..."
                                      >
-                                 <svg
-                                   xmlns="http://www.w3.org/2000/svg"
-                                   width="24"
-                                   height="24"
-                                   viewBox="0 0 24 24"
-                                   fill="none"
-                                   stroke="currentColor"
-                                   stroke-width="2"
-                                   stroke-linecap="round"
-                                   stroke-linejoin="round"
-                                   className="lucide lucide-moon absolute h-5 w-5 transition-[transform,opacity] dura..."
-                                 >
                            ...
                    ...
            ...
          ...



    at div (<anonymous>:null:null)
    at Header (webpack-internal:///(app-pages-browser)/./components/layout/header.tsx:240:122)
    at MainLayout (components/layout/main-layout.tsx:32:7)
    at Home (app/page.tsx:5:5)

## Code Frame
  30 |     <div className="min-h-screen bg-background">
  31 |       {/* Header renders immediately to prevent layout shift */}
> 32 |       <Header onSidebarToggle={toggleSidebar} isSidebarOpen={sidebarOpen} sidebarCollapsed={sidebarCollapsed} />
     |       ^
  33 |       
  34 |       <div className="pt-14"> 
  35 |         {/* Sidebar renders immediately but with fallback state until mounted */}

Next.js version: 15.5.2 (Webpack)
